#!/usr/bin/env node
var argv;
var yargs = require('yargs');
var fs = require('fs');
var art = require('ascii-art');
var amazon;
var BarcodeScanner = require('../barcode-scanner');
var AmazonProductAPI = require('shazbot');
yargs.usage('Usage: $0 <command> [options]')
yargs.command('server', 'launch a barcode-scanner server')
    .demand(1)
    .example('$0 server -p 8080 ', 'Run a server on port 8080')
    .alias('p', 'port')
        .nargs('p', 1)
        .describe('p', 'TCP/IP Port to run the server on')
    .alias('V', 'vendor')
        .nargs('V', 1)
        .describe('V', 'Vendor id')
    .alias('P', 'product')
        .nargs('P', 1)
        .describe('P', 'Product id')
    .alias('e', 'environment')
        .alias('e', 'env')
        .nargs('e', 1)
        .choices('e', ['development', 'staging', 'production', 'demo'])
        .describe('e', 'The environment you are running in');
yargs.command('probe', 'probe the hardware on this system')
    .demand(1)
    .example('$0 probe --serial-barcode /dev/cu.usbmodemFD121 ', 'Listen for data on a serial barcode reader')
    .alias('r', 'serial-barcode')
        .nargs('r', 1)
        .describe('r', 'Probe a serial barcode scanner')
    .alias('i', 'hid-barcode')
        .nargs('i', 1)
        .describe('i', 'Probe a USB HID barcode scanner');
yargs.command('probe-all', 'use probe to list all hardware on this system')
    .demand(1)
    .example('$0 probe-all ', '');
yargs.help('h')
    .alias('h', 'help')
    .epilog('Â©2016 - Abbey Hawk Sparrow');
argv = yargs.argv;
var action = argv._.pop();

function listen(cb){
    //OSX is super touchy about this and generally require being built as an App
    // with the proper properties
    if(argv.r){
        BarcodeScanner.listen({
            serial : argv.r
        }, cb);
    }
    if(argv.i){
        BarcodeScanner.listen({
            hid : argv.i
        }, cb);
    }
    if(argv.P && argv.V){
        var data = {
            vendor : argv.V,
            product: argv.P
        };
        BarcodeScanner.listen(data, cb);
    }
}

switch(action){
    case 'server':

        break;
    case 'probe':
       listen(function(barcode){
            console.log('barcode', argv.r, barcode);
        });
        break;
    case 'probe-all':
        BarcodeScanner.devices(function(devicesByType){
            console.log(devicesByType);
        });
        break;
}
